version: "3.9"

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - api
    networks:
      - poposerver

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./certbot/www:/var/www/certbot
  #     - ./certbot/conf:/etc/letsencrypt

  db0:
    image: postgres:15
    container_name: db0
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_0_USERNAME}
      POSTGRES_PASSWORD: ${DB_0_PASSWORD}
      POSTGRES_DB: ${DB_0_NAME}
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_0_PORT}:5432"
    networks:
      - poposerver

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - poposerver

  api:
    container_name: api
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file:
      - .env
    ports:
      - "${SERVICE_API_PORT}:${SERVICE_API_PORT}"
    depends_on:
      - db0
      - redis
    networks:
      - poposerver

  ticket-job:
    container_name: ticket-job
    build:
      context: .
      dockerfile: apps/ticket-job/Dockerfile
    env_file:
      - .env
    ports:
      - "${JOB_TICKET_PORT}:${JOB_TICKET_PORT}"
    depends_on:
      - db0
    networks:
      - poposerver

networks:
  poposerver:
    driver: bridge
